#  Copyright 2023-2025, [rust@localhost] $ (@3532340532)
# 
#  This file is part of AstraPulse.
# 
#  AstraPulse is free software: you can redistribute it and/or modify it under
#  the terms of the GNU General Public License as published by the Free
#  Software Foundation, either version 3 of the License, or (at your option)
#  any later version.
# 
#  AstraPulse is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#  details.
# 
#  You should have received a copy of the GNU General Public License along
#  with AstraPulse. If not, see <https://www.gnu.org/licenses/>.

name: ci-build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  CARGO_TERM_COLOR: always
jobs:
  release-build:
    runs-on: ubuntu-latest
    # 新增条件：仅 push 事件且提交信息包含 [release] 时运行
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
    steps:
      - uses: actions/checkout@v4
      - name: Setup ndk
        run: |
          ndk_url=$(wget -qO- https://github.com/android/ndk/releases/latest | grep -e 'https://dl.google.com/android/repository/android-ndk-.*-linux.zip' | sed -n 's/.*<a href="\([^"]*\)".*/\1/p')
          wget -O ndk.zip $ndk_url -nv
          mkdir ~/ndk_temp
          unzip ndk.zip -d ~/ndk_temp 2>&1 > /dev/null
          mv ~/ndk_temp/*/* ~/ndk_temp
      - name: Setup rust toolchains
        run: |
          rustup default nightly
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
          rustup component add rust-src
          rustup update
      - name: Install cargo ndk
        run: cargo install cargo-ndk
      - name: Other deps
        run: |
          sudo apt update
          sudo apt install gcc-multilib
      - name: Build
        run: |
          export ANDROID_NDK_HOME=$(realpath ~/ndk_temp)
          export ANDROID_NDK_ROOT=$ANDROID_NDK_HOME

          cargo task build -r
      - name: Prepare artifacts
        run: |
          mkdir -p output/artifact/release
          unzip "output/AstraPulse-(release).zip" -d output/artifact/release
      - name: Upload release version
        uses: actions/upload-artifact@v4
        with:
          name: AstraPulse-(release)
          compression-level: 9
          path: output/artifact/release
  
  debug-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup ndk
        run: |
          ndk_url=$(wget -qO- https://github.com/android/ndk/releases/latest | grep -e 'https://dl.google.com/android/repository/android-ndk-.*-linux.zip' | sed -n 's/.*<a href="\([^"]*\)".*/\1/p')
          wget -O ndk.zip $ndk_url -nv
          mkdir ~/ndk_temp
          unzip ndk.zip -d ~/ndk_temp 2>&1 > /dev/null
          mv ~/ndk_temp/*/* ~/ndk_temp
      - name: Setup rust toolchains
        run: |
          rustup default nightly
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
          rustup component add rust-src
          rustup update
      - name: Install cargo ndk
        run: cargo install cargo-ndk
      - name: Other deps
        run: |
          sudo apt update
          sudo apt install gcc-multilib
      - name: Build
        run: |
          export ANDROID_NDK_HOME=$(realpath ~/ndk_temp)
          export ANDROID_NDK_ROOT=$ANDROID_NDK_HOME
    
          cargo task build -v
      - name: Prepare artifacts
        run: |
          mkdir -p output/artifact/debug
          unzip "output/AstraPulse-(debug).zip" -d output/artifact/debug
      - name: Upload debug version
        uses: actions/upload-artifact@v4
        with:
          name: AstraPulse-(debug)3532340532
          compression-level: 9
          path: output/artifact/debug
  
  push_to_ci_group:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Push to CI Group
    needs:
      - debug-build
      - release-build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Package Artifacts
        run: |
          # 添加对产物存在的检查
          if [ -d "${{ github.workspace }}/artifacts/AstraPulse-(debug)" ]; then
            cd "${{ github.workspace }}/artifacts/AstraPulse-(debug)"
            zip -9 -rq "../AstraPulse-(debug)" .
          fi
          if [ -d "${{ github.workspace }}/artifacts/AstraPulse-(release)" ]; then
            cd "${{ github.workspace }}/artifacts/AstraPulse-(release)"
            zip -9 -rq "../AstraPulse-(release)" .
          fi
      - name: Post to Debug Group
        shell: bash
        env:
          GROUP_DEBUG_ID: ${{ secrets.TELEGRAM_TO }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          THREAD_ID: ${{ secrets.THREAD_ID }}
          COMMIT_MESSAGE: |+
            New push to GitHub
            ```
            ${{ github.event.head_commit.message }}
            ```by `${{ github.event.head_commit.author.name }}`
            See commit detail [here](${{ github.event.head_commit.url }})
        run: |
          ESCAPED=$(python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))')
          cd ${{ github.workspace }}
          echo $COMMIT_MESSAGE_FIXED
          # 添加对产物文件存在的检查
          if [ -f "artifacts/AstraPulse-(debug).zip" ]; then
            DEBUG_ZIP="@artifacts/AstraPulse-(debug).zip"
          else
            DEBUG_ZIP=""
          fi
          if [ -f "artifacts/AstraPulse-(release).zip" ]; then
            RELEASE_ZIP="@artifacts/AstraPulse-(release).zip"
          else
            RELEASE_ZIP=""
          fi
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${GROUP_DEBUG_ID}&message_thread_id=${THREAD_ID}&media=%5B%7B%22type%22:%22document%22,%20%22media%22:%22attach://debug_zip%22,%22parse_mode%22:%22MarkdownV2%22,%22caption%22:\"\"%7D,%7B%22type%22:%22document%22,%20%22media%22:%22attach://release_zip%22,%22parse_mode%22:%22MarkdownV2%22,%22caption%22:${ESCAPED}%7D%5D" -F debug_zip="$DEBUG_ZIP" -F release_zip="$RELEASE_ZIP"

  create-release:
    runs-on: ubuntu-latest
    needs: [release-build]
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: AstraPulse-(release)
          path: release-zip

      - name: Extract version tag
        id: extract_tag
        run: |
          MESSAGE="${{ github.event.head_commit.message }}"
          TAG=$(echo "$MESSAGE" | grep -oE '\[release\][ ]*v?[0-9]+\.[0-9]+' | head -1 | sed 's/\[release\]//g;s/ //g')
          if [ -z "$TAG" ]; then
            echo "::error::Release tag not found in commit message (format: [release]x.x.x)"
            exit 1
          fi
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: previous_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-creatordate --merged | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          else
            PREVIOUS_TAG=$LATEST_TAG
          fi
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          LOG=$(git log --pretty=format:"- %s (%%h)" ${{ steps.previous_tag.outputs.previous_tag }}..HEAD | sed 's/%/%%/g')
          [ -z "$LOG" ] && LOG="No significant changes"
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "Changes since last release:" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.extract_tag.outputs.tag_name }}
          name: "Release ${{ steps.extract_tag.outputs.tag_name }}"
          body: ${{ steps.changelog.outputs.body }}
          draft: false
          prerelease: false
          files: |
            release-zip/AstraPulse-(release).zip